buildscript {
	ext {
		kotlinVer = '1.1.3-2'
		springBootVer = '1.5.6.RELEASE'
		kotlinLoggingVer = '1.4.5'

		websocketApiVer = '1.1'

		jsonPathVer = '2.4.0'
		okHttpVer = '3.8.1'

		propdepsPluginVer = '0.0.10.RELEASE'
		versionPluginVer = '0.15.0'
		dockerPluginVer = '0.13.0'
	}

	repositories {
		jcenter()
		maven { url 'https://plugins.gradle.org/m2/' }
		maven { url 'http://repo.spring.io/plugins-release' }
	}
	dependencies {
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVer"
		classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVer"
		classpath "io.spring.gradle:propdeps-plugin:$propdepsPluginVer"
		// gradle dependencyUpdates -Drevision=release
		classpath "com.github.ben-manes:gradle-versions-plugin:$versionPluginVer"
		classpath "gradle.plugin.com.palantir.gradle.docker:gradle-docker:$dockerPluginVer"
	}
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'idea'
apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'propdeps'
apply plugin: 'propdeps-idea'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'com.palantir.docker'

group = 'app'
version = '0.1-SNAPSHOT'

mainClassName = 'li.barlog.app.AppKt'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
	kotlinOptions {
		jvmTarget = "1.8"
	}
}

sourceSets {
	main.java.srcDirs += [file("$buildDir/generated/source/kapt/main")]
}

repositories {
	jcenter()
}

configurations {
	all*.exclude module : 'spring-boot-starter-tomcat'
}

dependencies {
	compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVer"
	compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVer"

	compile "io.github.microutils:kotlin-logging:$kotlinLoggingVer"

	compile 'com.fasterxml.jackson.module:jackson-module-kotlin'
	compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

	compile 'org.springframework.boot:spring-boot-starter-web'
	compile 'org.springframework.boot:spring-boot-starter-undertow'

	compile 'org.springframework.boot:spring-boot-starter-websocket'
	compile "javax.websocket:javax.websocket-api:$websocketApiVer"

	compile 'org.springframework.boot:spring-boot-starter-actuator'

	compile 'org.springframework.boot:spring-boot-starter-security'

	compile 'org.springframework.security.oauth:spring-security-oauth2'
	compile 'org.springframework.security:spring-security-jwt'

	testCompile 'org.springframework.security:spring-security-test'
	testCompile "com.jayway.jsonpath:json-path:$jsonPathVer"
	testCompile 'org.springframework.boot:spring-boot-starter-test'
	testCompile "com.squareup.okhttp3:okhttp:$okHttpVer"

	kapt 'org.springframework.boot:spring-boot-configuration-processor'
	optional 'org.springframework.boot:spring-boot-configuration-processor'
}

task copyUI(type: Copy, dependsOn: ':ui:build') {
	from "${project(':ui').projectDir}/dist"
	into 'build/resources/main/static/ui'
}

jar {
	dependsOn copyUI

	archiveName 'app.jar'
}

bootRepackage.mustRunAfter clean

// https://github.com/palantir/gradle-docker
// gradle docker

docker() {
	dependsOn jar, bootRepackage
	name 'websocket-react-oauth2-app'
	tags 'latest'
	files tasks.jar.outputs
	dockerfile file('src/main/docker/Dockerfile')
	buildArgs([
		PORT     : '8081',
		JAVA_OPTS: '-Xms64m -Xmx128m'
	])
	pull true
}

task stage(dependsOn: ['build', 'clean'])
